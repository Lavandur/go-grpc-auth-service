version: "3.3"

services:
  postgres:
    image: postgres:15.3-alpine3.18
    command: postgres -c 'max_connections=1000' # some connections for tests
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB": ${POSTGRES_DBNAME}
      POSTGRES_MULTIPLE_DATABASES: ${DBNAME_FOR_TEST}
    healthcheck:
      test: pg_isready --username "${POSTGRES_USER}" --dbname "${DBNAME_FOR_TEST}"
      interval: 1s
      retries: 5
      timeout: 5s
    volumes:
      - ./docker-multiple-databases.sh:/docker-entrypoint-initdb.d/docker-multiple-databases.sh:ro
    tmpfs:
      - /var/lib/postgresql/data:rw

  migrate-main:
    image: migrate/migrate:v4.16.2
    command: >
      -source 'file:///db/migrations'
      -database 'postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DBNAME}?sslmode=disable' up
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./db/migrations:/db/migrations:ro

  migrate-reference:
    image: migrate/migrate:v4.16.2
    command: >
      -source 'file:///db/migrations'
      -database 'postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${DBNAME_FOR_TEST}?sslmode=disable' up
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./db/migrations:/db/migrations:ro

  migrate:
    image: postgres:15.3-alpine3.18
    command: echo 'All migrations have been successfully applied!'
    depends_on:
      postgres:
        condition: service_healthy
      migrate-main:
        condition: service_completed_successfully
      migrate-reference:
        condition: service_completed_successfully


#    volumes:
#      - db_data:/var/lib/postgresql/data
#
#volumes:
#  db_data: